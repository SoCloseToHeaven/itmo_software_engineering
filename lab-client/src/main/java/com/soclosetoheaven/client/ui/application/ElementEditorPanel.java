/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.soclosetoheaven.client.ui.application;

import com.github.weisj.darklaf.graphics.ThemedColor;
import com.soclosetoheaven.client.locale.LocaledUI;
import com.soclosetoheaven.client.locale.Localizer;
import com.soclosetoheaven.common.exception.InvalidFieldValueException;
import com.soclosetoheaven.common.model.Coordinates;
import com.soclosetoheaven.common.model.Dragon;
import com.soclosetoheaven.common.model.DragonCave;
import com.soclosetoheaven.common.model.DragonType;

import javax.swing.*;
import java.awt.*;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.text.DateFormat;
import java.util.Arrays;
import java.util.concurrent.atomic.AtomicInteger;


/**
 *
 * @author Дмитрий
 */
public class ElementEditorPanel extends javax.swing.JPanel {

    /**
     * Creates new form ElementEditorPanel
     */

    public ElementEditorPanel() {
        counter = new AtomicInteger();
        localizer = Localizer.getInstance();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dragonIcon = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        xField = new javax.swing.JTextField();
        yField = new javax.swing.JTextField();
        dateField = new javax.swing.JTextField();
        ageField = new javax.swing.JTextField();
        descriptionField = new javax.swing.JTextField();
        wingspanField = new javax.swing.JTextField();
        typeBox = new javax.swing.JComboBox<>();
        depthField = new javax.swing.JTextField();
        creatorIDField = new javax.swing.JTextField();
        addButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();
        idField = new javax.swing.JTextField();
        numberOfTreasuresField = new javax.swing.JTextField();

        dragonIcon.setIcon(icons[counter.get()]); // NOI18N
        dragonIcon.setLabelFor(dragonIcon);
        dragonIcon.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                dragonIcon.setIcon(icons[counter.incrementAndGet() % icons.length]);
            }
        });

        nameField.setToolTipText("");
        nameField.setName(""); // NOI18N
        dateField.setEditable(false);

        typeBox.setModel(new javax.swing.DefaultComboBoxModel<>(DragonType.values()));

        creatorIDField.setEditable(false);

        addButton.setBackground(ThemedColor.PINK);
        addButton.setForeground(ThemedColor.BLACK);

        updateButton.setBackground(ThemedColor.PINK);
        updateButton.setForeground(ThemedColor.BLACK);

        removeButton.setBackground(ThemedColor.PINK);
        removeButton.setForeground(ThemedColor.BLACK);
        idField.setToolTipText("");
        idField.setName(""); // NOI18N

        setDefaultText();
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap(69, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(descriptionField)
                                        .addComponent(ageField)
                                        .addComponent(dateField)
                                        .addComponent(yField)
                                        .addComponent(xField)
                                        .addComponent(nameField)
                                        .addComponent(wingspanField)
                                        .addComponent(typeBox, 0, 189, Short.MAX_VALUE)
                                        .addComponent(depthField)
                                        .addComponent(creatorIDField)
                                        .addComponent(idField)
                                        .addComponent(numberOfTreasuresField, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addContainerGap(69, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(dragonIcon)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(removeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(updateButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, addButton, updateButton);

        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(dragonIcon)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(idField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(xField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(yField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ageField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(descriptionField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(wingspanField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(typeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(depthField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(numberOfTreasuresField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(creatorIDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(updateButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(removeButton)
                                .addGap(15, 15, 15))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, ageField, creatorIDField, dateField, depthField, descriptionField, nameField, typeBox, wingspanField, xField, yField);

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, addButton, updateButton);

    }// </editor-fold> // </editor-fold>//GEN-END:initComponents


    /**
     *
     * @return Dragon if all correct, null if something incorrect
     */
    public Dragon readDragon() { // TODO: add validation
        try {
            String name = nameField.getText();
            int x = Integer.parseInt(xField.getText());
            int y = Integer.parseInt(yField.getText());
            long age = Long.parseLong(ageField.getText());
            String description = descriptionField.getText();
            int wingspan = Integer.parseInt(ageField.getText());
            DragonType type = (DragonType) typeBox.getSelectedItem();
            long depth = Long.parseLong(depthField.getText());
            int numberOfTreasures = Integer.parseInt(numberOfTreasuresField.getText());
            return new Dragon(
                name,
                new Coordinates(x, y),
                age,
                description,
                wingspan,
                type,
                new DragonCave(depth, numberOfTreasures)
            );
        } catch (NumberFormatException | InvalidFieldValueException e) {
            return null;
        }
    }


    public String getIDStringValue() {
        return idField.getText();
    }


    public void writeDragon(Dragon dragon) {
        this.idField.setText(String.valueOf(dragon.getID()));
        this.nameField.setText(dragon.getName());
        this.xField.setText(String.valueOf(dragon.getCoordinates().getX()));
        this.yField.setText(String.valueOf(dragon.getCoordinates().getY()));
        this.dateField.setText(localizer.formatDate(dragon.getCreationDate()));
        this.ageField.setText(String.valueOf(dragon.getAge()));
        this.descriptionField.setText(dragon.getDescription());
        this.typeBox.setSelectedItem(dragon.getType());
        this.depthField.setText(String.valueOf(dragon.getCave().getDepth()));
        this.numberOfTreasuresField.setText(String.valueOf(dragon.getCave().getNumberOfTreasures()));
        this.wingspanField.setText(String.valueOf(dragon.getWingspan()));
        this.creatorIDField.setText(String.valueOf(dragon.getCreatorId()));
    }

    public JButton getAddButton() {
        return addButton;
    }

    public JButton getRemoveButton() {
        return removeButton;
    }

    public JButton getUpdateButton() {
        return updateButton;
    }


    public void setDefaultText() {
        setDefaultButtonsText();
        setDefaultTextFieldsBackground();
    }

    private void setDefaultButtonsText() {
        updateButton.setText(localizer.getStringByKey(LocaledUI.UPDATE.key));
        removeButton.setText(localizer.getStringByKey(LocaledUI.DELETE.key));
        addButton.setText(localizer.getStringByKey(LocaledUI.CREATE.key));
    }


    private void setDefaultTextFieldsBackground() {
        registerBackgroundText(nameField, LocaledUI.NAME.key);
        registerBackgroundText(depthField, LocaledUI.DEPTH.key);
        registerBackgroundText(xField, LocaledUI.X_COORDINATE.key);
        registerBackgroundText(yField, LocaledUI.Y_COORDINATE.key);
        registerBackgroundText(wingspanField, LocaledUI.WINGSPAN.key);
        registerBackgroundText(numberOfTreasuresField, LocaledUI.TREASURES.key);
        registerBackgroundText(ageField, LocaledUI.AGE.key);
        registerBackgroundText(idField, LocaledUI.ID.key);
        registerBackgroundText(dateField, LocaledUI.DATE.key);
        registerBackgroundText(descriptionField, LocaledUI.DESCRIPTION.key);
        registerBackgroundText(creatorIDField, LocaledUI.CREATOR_ID.key);
    }
    private void registerBackgroundText(JTextField field, String key) {
        Arrays.stream(field.getActionListeners()).forEach(field::removeActionListener);
        Color previousColor = getForeground();
        Localizer localizer = Localizer.getInstance();
        field.setText(localizer.getStringByKey(key));
        field.setForeground(ThemedColor.GRAY);
        field.addFocusListener(new FocusAdapter() {
            @Override
            public void focusGained(FocusEvent e) {
                if (!field.isEditable())
                    return;
                if (field.getText().equals(localizer.getStringByKey(key))) {
                    field.setText(null);
                    field.setForeground(previousColor);
                }
            }

            @Override
            public void focusLost(FocusEvent e) {
                if (field.getText().isEmpty()) {
                    field.setForeground(Color.GRAY);
                    field.setText(localizer.getStringByKey(key));
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JTextField ageField;
    private javax.swing.JTextField dateField;
    private javax.swing.JTextField depthField;
    private javax.swing.JTextField descriptionField;
    private javax.swing.JLabel dragonIcon;
    private javax.swing.JTextField idField;
    private javax.swing.JTextField nameField;
    private javax.swing.JTextField numberOfTreasuresField;
    private javax.swing.JButton removeButton;
    private javax.swing.JComboBox<DragonType> typeBox;
    private javax.swing.JButton updateButton;
    private javax.swing.JTextField wingspanField;
    private javax.swing.JTextField xField;
    private javax.swing.JTextField yField;

    private javax.swing.JTextField creatorIDField;

    private final Localizer localizer;

    private final AtomicInteger counter;


    private final ImageIcon[] icons = {
            new javax.swing.ImageIcon(getClass().getResource("/images/dragon-icon.png")),
            new javax.swing.ImageIcon(getClass().getResource("/images/legendary-dragon-icon.png"))
    };
    // End of variables declaration//GEN-END:variables
}
